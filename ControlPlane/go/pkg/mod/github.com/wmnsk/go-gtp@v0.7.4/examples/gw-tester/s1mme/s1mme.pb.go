// Code generated by protoc-gen-go. DO NOT EDIT.
// source: s1mme.proto

package s1mme

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Cause represents a result of attach / detach.
type Cause int32

const (
	Cause_INVALID        Cause = 0
	Cause_SUCCESS        Cause = 1
	Cause_GW_UNAVAILABLE Cause = 2
)

var Cause_name = map[int32]string{
	0: "INVALID",
	1: "SUCCESS",
	2: "GW_UNAVAILABLE",
}

var Cause_value = map[string]int32{
	"INVALID":        0,
	"SUCCESS":        1,
	"GW_UNAVAILABLE": 2,
}

func (x Cause) String() string {
	return proto.EnumName(Cause_name, int32(x))
}

func (Cause) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_24365dc18e89382c, []int{0}
}

type Location_RATType int32

const (
	Location_INVALID        Location_RATType = 0
	Location_UTRAN          Location_RATType = 1
	Location_GERAN          Location_RATType = 2
	Location_WLAN           Location_RATType = 3
	Location_GAN            Location_RATType = 4
	Location_HSPA_EVOLUTION Location_RATType = 5
	Location_EUTRAN         Location_RATType = 6
	Location_VIRTUAL        Location_RATType = 7
	Location_EUTRAN_NB_IOT  Location_RATType = 8
	Location_LTEM           Location_RATType = 9
	Location_NR             Location_RATType = 10
)

var Location_RATType_name = map[int32]string{
	0:  "INVALID",
	1:  "UTRAN",
	2:  "GERAN",
	3:  "WLAN",
	4:  "GAN",
	5:  "HSPA_EVOLUTION",
	6:  "EUTRAN",
	7:  "VIRTUAL",
	8:  "EUTRAN_NB_IOT",
	9:  "LTEM",
	10: "NR",
}

var Location_RATType_value = map[string]int32{
	"INVALID":        0,
	"UTRAN":          1,
	"GERAN":          2,
	"WLAN":           3,
	"GAN":            4,
	"HSPA_EVOLUTION": 5,
	"EUTRAN":         6,
	"VIRTUAL":        7,
	"EUTRAN_NB_IOT":  8,
	"LTEM":           9,
	"NR":             10,
}

func (x Location_RATType) String() string {
	return proto.EnumName(Location_RATType_name, int32(x))
}

func (Location_RATType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_24365dc18e89382c, []int{2, 0}
}

// AttachRequest is used to request MME to create a session/bearer.
type AttachRequest struct {
	Imsi                 string    `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	Msisdn               string    `protobuf:"bytes,2,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	Imeisv               string    `protobuf:"bytes,3,opt,name=imeisv,proto3" json:"imeisv,omitempty"`
	S1UAddr              string    `protobuf:"bytes,4,opt,name=s1u_addr,json=s1uAddr,proto3" json:"s1u_addr,omitempty"`
	SrcIp                string    `protobuf:"bytes,5,opt,name=src_ip,json=srcIp,proto3" json:"src_ip,omitempty"`
	ITei                 uint32    `protobuf:"varint,6,opt,name=i_tei,json=iTei,proto3" json:"i_tei,omitempty"`
	Location             *Location `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	Reattach             bool      `protobuf:"varint,8,opt,name=reattach,proto3" json:"reattach,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AttachRequest) Reset()         { *m = AttachRequest{} }
func (m *AttachRequest) String() string { return proto.CompactTextString(m) }
func (*AttachRequest) ProtoMessage()    {}
func (*AttachRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_24365dc18e89382c, []int{0}
}

func (m *AttachRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachRequest.Unmarshal(m, b)
}
func (m *AttachRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachRequest.Marshal(b, m, deterministic)
}
func (m *AttachRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachRequest.Merge(m, src)
}
func (m *AttachRequest) XXX_Size() int {
	return xxx_messageInfo_AttachRequest.Size(m)
}
func (m *AttachRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AttachRequest proto.InternalMessageInfo

func (m *AttachRequest) GetImsi() string {
	if m != nil {
		return m.Imsi
	}
	return ""
}

func (m *AttachRequest) GetMsisdn() string {
	if m != nil {
		return m.Msisdn
	}
	return ""
}

func (m *AttachRequest) GetImeisv() string {
	if m != nil {
		return m.Imeisv
	}
	return ""
}

func (m *AttachRequest) GetS1UAddr() string {
	if m != nil {
		return m.S1UAddr
	}
	return ""
}

func (m *AttachRequest) GetSrcIp() string {
	if m != nil {
		return m.SrcIp
	}
	return ""
}

func (m *AttachRequest) GetITei() uint32 {
	if m != nil {
		return m.ITei
	}
	return 0
}

func (m *AttachRequest) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *AttachRequest) GetReattach() bool {
	if m != nil {
		return m.Reattach
	}
	return false
}

// AttachResponse is used to respond to AttachRequest.
type AttachResponse struct {
	Cause                Cause    `protobuf:"varint,1,opt,name=cause,proto3,enum=s1mme.Cause" json:"cause,omitempty"`
	SgwAddr              string   `protobuf:"bytes,2,opt,name=sgw_addr,json=sgwAddr,proto3" json:"sgw_addr,omitempty"`
	OTei                 uint32   `protobuf:"varint,3,opt,name=o_tei,json=oTei,proto3" json:"o_tei,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachResponse) Reset()         { *m = AttachResponse{} }
func (m *AttachResponse) String() string { return proto.CompactTextString(m) }
func (*AttachResponse) ProtoMessage()    {}
func (*AttachResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24365dc18e89382c, []int{1}
}

func (m *AttachResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachResponse.Unmarshal(m, b)
}
func (m *AttachResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachResponse.Marshal(b, m, deterministic)
}
func (m *AttachResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachResponse.Merge(m, src)
}
func (m *AttachResponse) XXX_Size() int {
	return xxx_messageInfo_AttachResponse.Size(m)
}
func (m *AttachResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AttachResponse proto.InternalMessageInfo

func (m *AttachResponse) GetCause() Cause {
	if m != nil {
		return m.Cause
	}
	return Cause_INVALID
}

func (m *AttachResponse) GetSgwAddr() string {
	if m != nil {
		return m.SgwAddr
	}
	return ""
}

func (m *AttachResponse) GetOTei() uint32 {
	if m != nil {
		return m.OTei
	}
	return 0
}

// Location represents a set of location-related information.
type Location struct {
	Mcc                  string           `protobuf:"bytes,1,opt,name=mcc,proto3" json:"mcc,omitempty"`
	Mnc                  string           `protobuf:"bytes,2,opt,name=mnc,proto3" json:"mnc,omitempty"`
	RatType              Location_RATType `protobuf:"varint,3,opt,name=rat_type,json=ratType,proto3,enum=s1mme.Location_RATType" json:"rat_type,omitempty"`
	Tai                  uint32           `protobuf:"varint,4,opt,name=tai,proto3" json:"tai,omitempty"`
	Eci                  uint32           `protobuf:"varint,5,opt,name=eci,proto3" json:"eci,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_24365dc18e89382c, []int{2}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetMcc() string {
	if m != nil {
		return m.Mcc
	}
	return ""
}

func (m *Location) GetMnc() string {
	if m != nil {
		return m.Mnc
	}
	return ""
}

func (m *Location) GetRatType() Location_RATType {
	if m != nil {
		return m.RatType
	}
	return Location_INVALID
}

func (m *Location) GetTai() uint32 {
	if m != nil {
		return m.Tai
	}
	return 0
}

func (m *Location) GetEci() uint32 {
	if m != nil {
		return m.Eci
	}
	return 0
}

// DetachRequest is used to request MME to delete a session/bearer.
type DetachRequest struct {
	Imsi                 string   `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetachRequest) Reset()         { *m = DetachRequest{} }
func (m *DetachRequest) String() string { return proto.CompactTextString(m) }
func (*DetachRequest) ProtoMessage()    {}
func (*DetachRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_24365dc18e89382c, []int{3}
}

func (m *DetachRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetachRequest.Unmarshal(m, b)
}
func (m *DetachRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetachRequest.Marshal(b, m, deterministic)
}
func (m *DetachRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetachRequest.Merge(m, src)
}
func (m *DetachRequest) XXX_Size() int {
	return xxx_messageInfo_DetachRequest.Size(m)
}
func (m *DetachRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DetachRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DetachRequest proto.InternalMessageInfo

func (m *DetachRequest) GetImsi() string {
	if m != nil {
		return m.Imsi
	}
	return ""
}

// DetachResponse is used to respond to DetachRequest.
type DetachResponse struct {
	Cause                Cause    `protobuf:"varint,1,opt,name=cause,proto3,enum=s1mme.Cause" json:"cause,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetachResponse) Reset()         { *m = DetachResponse{} }
func (m *DetachResponse) String() string { return proto.CompactTextString(m) }
func (*DetachResponse) ProtoMessage()    {}
func (*DetachResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24365dc18e89382c, []int{4}
}

func (m *DetachResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetachResponse.Unmarshal(m, b)
}
func (m *DetachResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetachResponse.Marshal(b, m, deterministic)
}
func (m *DetachResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetachResponse.Merge(m, src)
}
func (m *DetachResponse) XXX_Size() int {
	return xxx_messageInfo_DetachResponse.Size(m)
}
func (m *DetachResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DetachResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DetachResponse proto.InternalMessageInfo

func (m *DetachResponse) GetCause() Cause {
	if m != nil {
		return m.Cause
	}
	return Cause_INVALID
}

func init() {
	proto.RegisterEnum("s1mme.Cause", Cause_name, Cause_value)
	proto.RegisterEnum("s1mme.Location_RATType", Location_RATType_name, Location_RATType_value)
	proto.RegisterType((*AttachRequest)(nil), "s1mme.AttachRequest")
	proto.RegisterType((*AttachResponse)(nil), "s1mme.AttachResponse")
	proto.RegisterType((*Location)(nil), "s1mme.Location")
	proto.RegisterType((*DetachRequest)(nil), "s1mme.DetachRequest")
	proto.RegisterType((*DetachResponse)(nil), "s1mme.DetachResponse")
}

func init() { proto.RegisterFile("s1mme.proto", fileDescriptor_24365dc18e89382c) }

var fileDescriptor_24365dc18e89382c = []byte{
	// 536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x4f, 0x6f, 0xd3, 0x4c,
	0x10, 0xc6, 0x6b, 0x27, 0xfe, 0xd3, 0xc9, 0xeb, 0xbc, 0xcb, 0x96, 0x82, 0xe9, 0x29, 0x32, 0x97,
	0x08, 0xa4, 0x4a, 0x0d, 0x20, 0xce, 0xdb, 0xd4, 0x0a, 0x96, 0x8c, 0x83, 0x36, 0x4e, 0x7a, 0xb4,
	0x8c, 0xbd, 0x2a, 0x2b, 0xe1, 0xd8, 0x78, 0x1d, 0xaa, 0x4a, 0x7c, 0x09, 0xae, 0x7c, 0x3d, 0xbe,
	0x08, 0xda, 0x5d, 0x27, 0x52, 0x7a, 0x81, 0xdb, 0x33, 0xcf, 0xec, 0x8c, 0xe7, 0x37, 0xde, 0x85,
	0x91, 0xb8, 0xaa, 0x2a, 0x76, 0xd9, 0xb4, 0x75, 0x57, 0x63, 0x4b, 0x05, 0xc1, 0x6f, 0x03, 0x3c,
	0xd2, 0x75, 0x79, 0xf1, 0x85, 0xb2, 0x6f, 0x3b, 0x26, 0x3a, 0x8c, 0x61, 0xc8, 0x2b, 0xc1, 0x7d,
	0x63, 0x62, 0x4c, 0x4f, 0xa9, 0xd2, 0xf8, 0x19, 0xd8, 0x95, 0xe0, 0xa2, 0xdc, 0xfa, 0xa6, 0x72,
	0xfb, 0x48, 0xfa, 0xbc, 0x62, 0x5c, 0x7c, 0xf7, 0x07, 0xda, 0xd7, 0x11, 0x7e, 0x01, 0xae, 0xb8,
	0xda, 0x65, 0x79, 0x59, 0xb6, 0xfe, 0x50, 0x65, 0x1c, 0x71, 0xb5, 0x23, 0x65, 0xd9, 0xe2, 0x73,
	0xb0, 0x45, 0x5b, 0x64, 0xbc, 0xf1, 0x2d, 0x95, 0xb0, 0x44, 0x5b, 0x44, 0x0d, 0x3e, 0x03, 0x8b,
	0x67, 0x1d, 0xe3, 0xbe, 0x3d, 0x31, 0xa6, 0x1e, 0x1d, 0xf2, 0x94, 0x71, 0xfc, 0x1a, 0xdc, 0xaf,
	0x75, 0x91, 0x77, 0xbc, 0xde, 0xfa, 0xce, 0xc4, 0x98, 0x8e, 0x66, 0xff, 0x5f, 0x6a, 0x86, 0xb8,
	0xb7, 0xe9, 0xe1, 0x00, 0xbe, 0x00, 0xb7, 0x65, 0xb9, 0x42, 0xf1, 0xdd, 0x89, 0x31, 0x75, 0xe9,
	0x21, 0x0e, 0x4a, 0x18, 0xef, 0x21, 0x45, 0x53, 0x6f, 0x05, 0xc3, 0x01, 0x58, 0x45, 0xbe, 0x13,
	0x4c, 0x61, 0x8e, 0x67, 0xff, 0xf5, 0x7d, 0xe7, 0xd2, 0xa3, 0x3a, 0xa5, 0x28, 0xee, 0xee, 0x35,
	0x85, 0xd9, 0x53, 0xdc, 0xdd, 0x2b, 0x8a, 0x33, 0xb0, 0x6a, 0x35, 0xee, 0x40, 0x8f, 0x5b, 0xa7,
	0x8c, 0x07, 0xbf, 0x4c, 0x70, 0xf7, 0x83, 0x61, 0x04, 0x83, 0xaa, 0x28, 0xfa, 0x2d, 0x4a, 0xa9,
	0x9c, 0x6d, 0xd1, 0x77, 0x92, 0x12, 0xcf, 0xc0, 0x6d, 0xf3, 0x2e, 0xeb, 0x1e, 0x1a, 0xa6, 0x1a,
	0x8d, 0x67, 0xcf, 0x1f, 0xf1, 0x5d, 0x52, 0x92, 0xa6, 0x0f, 0x0d, 0xa3, 0x4e, 0x9b, 0x77, 0x52,
	0xc8, 0x2e, 0x5d, 0xce, 0xd5, 0x56, 0x3d, 0x2a, 0xa5, 0x74, 0x58, 0xc1, 0xd5, 0x3a, 0x3d, 0x2a,
	0x65, 0xf0, 0xd3, 0x00, 0xa7, 0x2f, 0xc4, 0x23, 0x70, 0xa2, 0x64, 0x43, 0xe2, 0xe8, 0x06, 0x9d,
	0xe0, 0x53, 0xb0, 0xd6, 0x29, 0x25, 0x09, 0x32, 0xa4, 0x5c, 0x84, 0x52, 0x9a, 0xd8, 0x85, 0xe1,
	0x6d, 0x4c, 0x12, 0x34, 0xc0, 0x0e, 0x0c, 0x16, 0x24, 0x41, 0x43, 0x8c, 0x61, 0xfc, 0x61, 0xf5,
	0x89, 0x64, 0xe1, 0x66, 0x19, 0xaf, 0xd3, 0x68, 0x99, 0x20, 0x0b, 0x03, 0xd8, 0xa1, 0xae, 0xb6,
	0x65, 0xd7, 0x4d, 0x44, 0xd3, 0x35, 0x89, 0x91, 0x83, 0x9f, 0x80, 0xa7, 0x13, 0x59, 0x72, 0x9d,
	0x45, 0xcb, 0x14, 0xb9, 0xb2, 0x65, 0x9c, 0x86, 0x1f, 0xd1, 0x29, 0xb6, 0xc1, 0x4c, 0x28, 0x82,
	0xe0, 0x25, 0x78, 0x37, 0xec, 0x2f, 0xf7, 0x2c, 0x78, 0x0b, 0xe3, 0xfd, 0xa1, 0x7f, 0xff, 0x4f,
	0xaf, 0xde, 0x81, 0xa5, 0xe2, 0x63, 0xd6, 0x11, 0x38, 0xab, 0xf5, 0x7c, 0x1e, 0xae, 0x56, 0xc8,
	0x90, 0x3c, 0x8b, 0xdb, 0x6c, 0x9d, 0x90, 0x0d, 0x89, 0x62, 0x72, 0x1d, 0x87, 0xc8, 0x9c, 0xfd,
	0x00, 0x57, 0x5f, 0x0a, 0xd6, 0xe2, 0xf7, 0x60, 0x6b, 0x8d, 0x9f, 0xf6, 0x5f, 0x38, 0x7a, 0x14,
	0x17, 0xe7, 0x8f, 0x5c, 0x3d, 0x5d, 0x70, 0x22, 0x0b, 0xf5, 0xc4, 0x87, 0xc2, 0x23, 0xca, 0x43,
	0xe1, 0x31, 0x56, 0x70, 0xf2, 0xd9, 0x56, 0xcf, 0xf0, 0xcd, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xf1, 0x17, 0x91, 0x66, 0x95, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AttacherClient is the client API for Attacher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AttacherClient interface {
	Attach(ctx context.Context, in *AttachRequest, opts ...grpc.CallOption) (*AttachResponse, error)
	Detach(ctx context.Context, in *DetachRequest, opts ...grpc.CallOption) (*DetachResponse, error)
}

type attacherClient struct {
	cc *grpc.ClientConn
}

func NewAttacherClient(cc *grpc.ClientConn) AttacherClient {
	return &attacherClient{cc}
}

func (c *attacherClient) Attach(ctx context.Context, in *AttachRequest, opts ...grpc.CallOption) (*AttachResponse, error) {
	out := new(AttachResponse)
	err := c.cc.Invoke(ctx, "/s1mme.Attacher/Attach", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attacherClient) Detach(ctx context.Context, in *DetachRequest, opts ...grpc.CallOption) (*DetachResponse, error) {
	out := new(DetachResponse)
	err := c.cc.Invoke(ctx, "/s1mme.Attacher/Detach", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AttacherServer is the server API for Attacher service.
type AttacherServer interface {
	Attach(context.Context, *AttachRequest) (*AttachResponse, error)
	Detach(context.Context, *DetachRequest) (*DetachResponse, error)
}

// UnimplementedAttacherServer can be embedded to have forward compatible implementations.
type UnimplementedAttacherServer struct {
}

func (*UnimplementedAttacherServer) Attach(ctx context.Context, req *AttachRequest) (*AttachResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Attach not implemented")
}
func (*UnimplementedAttacherServer) Detach(ctx context.Context, req *DetachRequest) (*DetachResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Detach not implemented")
}

func RegisterAttacherServer(s *grpc.Server, srv AttacherServer) {
	s.RegisterService(&_Attacher_serviceDesc, srv)
}

func _Attacher_Attach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttacherServer).Attach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/s1mme.Attacher/Attach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttacherServer).Attach(ctx, req.(*AttachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Attacher_Detach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttacherServer).Detach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/s1mme.Attacher/Detach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttacherServer).Detach(ctx, req.(*DetachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Attacher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "s1mme.Attacher",
	HandlerType: (*AttacherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Attach",
			Handler:    _Attacher_Attach_Handler,
		},
		{
			MethodName: "Detach",
			Handler:    _Attacher_Detach_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "s1mme.proto",
}
