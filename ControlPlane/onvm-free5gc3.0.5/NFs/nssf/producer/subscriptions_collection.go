/*
 * NSSF NSSAI Availability
 *
 * NSSF NSSAI Availability Service
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package producer

import (
	"net/http"

	"github.com/free5gc/http_wrapper"
	"github.com/free5gc/nssf/logger"
	"github.com/free5gc/openapi/models"
)

// HandleNSSAIAvailabilityPost - Creates subscriptions for notification about updates to NSSAI availability information
func HandleNSSAIAvailabilityPost(request *http_wrapper.Request) *http_wrapper.Response {
	logger.Nssaiavailability.Infof("Handle NSSAIAvailabilityPost")

	createData := request.Body.(models.NssfEventSubscriptionCreateData)

	// TODO: If NF consumer is not authorized to update NSSAI availability, return ProblemDetails with code 403 Forbidden

	response, problemDetails := NSSAIAvailabilityPostProcedure(createData)

	if response != nil {
		// TODO: Based on TS 29.531 5.3.2.3.1, add location header
		return http_wrapper.NewResponse(http.StatusCreated, nil, response)
	} else if problemDetails != nil {
		return http_wrapper.NewResponse(int(problemDetails.Status), nil, problemDetails)
	}
	problemDetails = &models.ProblemDetails{
		Status: http.StatusForbidden,
		Cause:  "UNSPECIFIED",
	}
	return http_wrapper.NewResponse(http.StatusForbidden, nil, problemDetails)
}
